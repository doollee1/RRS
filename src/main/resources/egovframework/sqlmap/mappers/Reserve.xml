<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper   PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="ReserveMapper">
	<select id="reserveSelectList" parameterType="BMap" resultType="BMap">
    <include refid="page.pagingPre"/> <!-- 페이징 처리 시작 -->	
    SELECT T3.*
  FROM (
    SELECT ROW_NUMBER() OVER(ORDER BY T1.SEQ DESC) AS ROWNUM
         , T1.REQ_DT                              /* 예약일자              */
         , T1.SEQ                                 /* 일련번호              */
         , T1.USER_ID                             /* 사용자ID              */
         , T1.REQ_HAN_NM                          /* 예약자한글명          */
         , T1.REQ_ENG_NM                          /* 예약자영문명          */
         , T1.REQ_TEL_NO                          /* 예약자전화번호        */
         , T1.MEM_GBN                             /* 회원구분              */
         , (SELECT CODE
              FROM BC_COMM_L
             WHERE 1 = 1
               AND HEAD_CD = '500030'
               AND CODE = T1.MEM_GBN) AS MEM_CD   /* 멤버구분코드           */
         , (SELECT CODE_NM
              FROM BC_COMM_L
             WHERE 1 = 1
               AND HEAD_CD = '500030'
               AND CODE = T1.MEM_GBN) AS MEM_NM   /* 멤버구분              */
         , (SELECT CODE_NM
              FROM BC_COMM_L
             WHERE 1 = 1
               AND HEAD_CD = '500020'
               AND CODE = T1.PRC_STS) AS STATE_NM /* 상태구분              */
         , T1.AGN_CD                              /* 에이전시코드          */
         , T1.PRC_STS                             /* 예약상태              */
         , T1.CHK_IN_DT                           /* 체크인일자            */
         , T1.CHK_OUT_DT                          /* 체크아웃일자          */
         , T1.ROOM_TYPE                           /* 객실타입              */
         , T1.FLIGHT_IN                           /* 도착항공기편          */
         , T1.FLIGHT_OUT                          /* 출발항공기편          */
         , T1.TOT_PERSON                          /* 총인원                */
         , T1.BAS_YY                              /* 기준년도              */
         , T1.PROD_SEQ                            /* 상품순번              */
         , T1.PICK_GBN                            /* 미팅샌딩구분          */
         , T1.ADD_R_S_PER                         /* 싱글룸추가인원수      */
         , T1.ADD_R_S_DAY                         /* 싱글룸추가일수        */
         , T1.ADD_R_S_CNT                         /* 싱글룸추가갯수        */
         , T1.ADD_R_P_PER                         /* 프리미엄룸추가일수    */
         , T1.ADD_R_P_DAY                         /* 프리미엄룸추가일수    */
         , T1.ADD_R_P_CNT                         /* 프리미엄추가갯수      */
         , T1.CNT_D1                              /* 트윈갯수              */
         , T1.CNT_D2                              /* 더블갯수              */
         , T1.CNT_P1                              /* 프리미엄트윈갯수      */
         , T1.CNT_P2                              /* 프리미엄킹갯수        */         
         , T1.PICK_IN                             /* 픽업차량-도착         */
         , T1.PICK_OUT                            /* 픽업차량-출발         */
         , T1.LATE_CHECK_OUT                      /* Late체크아웃여부      */
         , T1.REMARK                              /* 비고(추가요구사항)    */
         , T1.INV_REG_DT                          /* 인보이스발행일자      */
         , T1.CONFIRM_NO                          /* 리조트confirm번호     */
         , T1.RND_CHG_YN1                         /* 라운딩변경(토오전)여부*/
         , T1.RND_CHG_YN2                         /* 라운딩변경(일오전)여부*/
         , T1.REG_DTM                             /* 등록일시              */
         , T1.REG_ID                              /* 등록자ID              */
         , T1.UPD_DTM                             /* 수정일시              */
        <!--  
         , T1.UPD_ID                              /* 수정자ID              */
         , T2.DEP_IN_DT                           /* 예약금입금일자        */
         , T2.DEP_AMT                             /* 예약금액              */
         , T2.BAL_AMT                             /* 잔금                  */
         , T2.DCT_AMT                             /* 할인금액              */
         , T2.PAY_AMT                             /* 입금금액              */
         , T2.TOT_AMT                             /* 총액                  */
        -->  
      FROM TB_REQ_BOOKING_M T1
        <!--  , TB_REQ_FEE T2  -->
     WHERE 1 = 1
      <!--  
       AND T2.REQ_DT  = T1.REQ_DT
       AND T2.REQ_SEQ = T1.SEQ   
       -->  
   <if test="SEARCH != null and SEARCH != ''">
       AND ${SEARCH} BETWEEN #{RESERVE_STDT} AND #{RESERVE_EDDT}
   </if>
       ) T3
 WHERE 1 = 1
   <if test="MEM_GBN != null and MEM_GBN != ''">
       AND T3.MEM_GBN = #{MEM_GBN}
   </if>
   <if test="PRC_STS != null and PRC_STS != ''">
       AND T3.PRC_STS = #{PRC_STS}
   </if>
 ORDER BY T3.ROWNUM
    <include refid="page.pagingPost"/> <!-- 페이징 처리 끝 -->
	</select>
	
	<select id="selectGetCommonCode" parameterType="Bmap" resultType="Bmap">
	    SELECT T1.CODE , T1.CODE_NM
          FROM BC_COMM_L T1
          JOIN BC_COMM_H T2 ON T2.HEAD_CD = /**/ T1.HEAD_CD
         WHERE 1 = 1
           AND T1.HEAD_CD = #{HEAD_CD}
       <if test="REF_CHR1 != null and REF_CHR1 != ''">
	  	   AND T1.REF_CHR1 = #{REF_CHR1}
	   </if>
	   <if test="CODE != null and CODE != ''">
	  	   AND T1.CODE > #{CODE}
	   </if>
	   <choose>
	       <when test="ORDER_GBN != null and ORDER_GBN != ''">
	           ORDER BY T1.REF_CHR5
	       </when>
	       <otherwise>
               ORDER BY T1.CODE
	       </otherwise>
	   </choose>
	</select>
	
	<select id="selectGetCommonCode1" parameterType="Bmap" resultType="CodeVO">
        SELECT DISTINCT(${REF_CHR}) AS CODE
             , CASE WHEN ${REF_CHR} = #{VAL} THEN #{KOR_1} ELSE #{KOR_2} END AS VALUE 
          FROM BC_COMM_L
         WHERE 1 = 1 
           AND HEAD_CD =  #{HEAD_CD}
	</select>
	
	
	<select id="reserveSelectDetail" parameterType="BMap" resultType="BMap">
    SELECT T3.*
	  FROM (
	    SELECT ROW_NUMBER() OVER(ORDER BY T1.SEQ DESC) AS ROWNUM           /* ROWNUM                 */
	         , T1.REQ_DT                               AS REQ_DT           /* 예약일자               */
	         , T1.SEQ                                  AS SEQ              /* 일련번호               */
	         , T1.USER_ID                              AS USER_ID          /* 사용자ID               */
	         , T1.REQ_HAN_NM                           AS REQ_HAN_NM       /* 예약자한글명           */
	         , T1.REQ_ENG_NM                           AS REQ_ENG_NM       /* 예약자영문명           */
	         , T1.REQ_TEL_NO                           AS REQ_TEL_NO       /* 예약자전화번호         */
	         , T1.MEM_GBN                              AS MEM_GBN          /* 회원구분               */
	         , (SELECT CODE
	              FROM BC_COMM_L
	             WHERE 1 = 1
	               AND HEAD_CD = '500030'
	               AND CODE = T1.MEM_GBN)             AS MEM_CD            /* 멤버구분코드           */
	         , (SELECT CODE_NM
	              FROM BC_COMM_L
	             WHERE 1 = 1
	               AND HEAD_CD = '500030'
	               AND CODE = T1.MEM_GBN)             AS MEM_NM            /* 멤버구분               */
	         , (SELECT CODE_NM
	              FROM BC_COMM_L
	             WHERE 1 = 1
	               AND HEAD_CD = '500020'
	               AND CODE = T1.PRC_STS)             AS PRC_STS_NM        /* 상태구분               */
	         , T1.AGN_CD                              AS AGN_CD            /* 에이전시코드           */
	         , (SELECT CODE_NM
	              FROM BC_COMM_L
	             WHERE 1 = 1
	               AND HEAD_CD = '500120'
	               AND CODE = T1.AGN_CD)              AS AGN_CD_NM         /* 에이전시구분           */
	         , T1.PRC_STS                             AS PRC_STS           /* 예약상태               */
	         , T1.CHK_IN_DT                           AS CHK_IN_DT         /* 체크인일자             */
	         , T1.CHK_OUT_DT                          AS CHK_OUT_DT        /* 체크아웃일자           */
	         , T1.ROOM_TYPE                           AS ROOM_TYPE         /* 객실타입               */
	         , (SELECT CODE_NM
	              FROM BC_COMM_L
	             WHERE 1 = 1
	               AND HEAD_CD = '500070'
	               AND CODE = T1.ROOM_TYPE)           AS ROOM_NM           /* 객실구분코드           */
	         , T1.FLIGHT_IN                           AS FLIGHT_IN         /* 도착항공기편           */
	         , T1.FLIGHT_OUT                          AS FLIGHT_OUT        /* 출발항공기편           */
	         , NVL(T1.TOT_PERSON,0)                   AS TOT_PERSON        /* 총인원                 */
	         , T1.BAS_YY                              AS BAS_YY            /* 기준년도               */
	         , T1.PROD_SEQ                            AS PROD_SEQ          /* 상품순번               */
	         , T1.PICK_GBN                            AS PICK_GBN          /* 미팅샌딩구분           */
	         , NVL(T1.R_PERSON,0)                     AS R_PERSON          /* 라운딩 수              */
	         , NVL(T1.N_PERSON,0)                     AS N_PERSON          /* 비라운딩 수            */
	         , NVL(T1.K_PERSON,0)                     AS K_PERSON          /* 소아 수                */
	         , NVL(T1.ADD_R_S_PER,0)                  AS ADD_R_S_PER       /* 싱글룸추가인원수       */
	         , NVL(T1.ADD_R_S_DAY,0)                  AS ADD_R_S_DAY       /* 싱글룸추가일수         */
	         , NVL(T1.ADD_R_S_CNT,0)                  AS ADD_R_S_CNT       /* 싱글룸추가갯수         */
	         , NVL(T1.ADD_R_P_PER,0)                  AS ADD_R_P_PER       /* 프리미엄룸추가일수     */
	         , NVL(T1.ADD_R_P_DAY,0)                  AS ADD_R_P_DAY       /* 프리미엄룸추가일수     */
	         , NVL(T1.ADD_R_P_CNT,0)                  AS ADD_R_P_CNT       /* 프리미엄추가갯수       */
	         , NVL(T1.CNT_D1,0)                       AS CNT_D1            /* 트윈갯수               */
	         , NVL(T1.CNT_D2,0)                       AS CNT_D2            /* 더블갯수               */
	         , NVL(T1.CNT_P1,0)                       AS CNT_P1            /* 프리미엄트윈갯수       */
	         , NVL(T1.CNT_P2,0)                       AS CNT_P2            /* 프리미엄킹갯수         */
	         , T1.PICK_IN                             AS PICK_IN           /* 픽업차량-도착          */
	         , T1.PICK_OUT                            AS PICK_OUT          /* 픽업차량-출발          */
	         , T1.LATE_CHECK_OUT                      AS LATE_CHECK_OUT    /* Late체크아웃여부       */
	         , T1.REMARK                              AS REMARK            /* 비고(추가요구사항)     */
	         , T1.INV_REG_DT                          AS INV_REG_DT        /* 인보이스발행일자       */
	         , T1.CONFIRM_NO                          AS CONFIRM_NO        /* 리조트confirm번호      */
	         , T1.RND_CHG_YN1                         AS RND_CHG_YN1       /* 라운딩변경(토오전)여부 */
	         , T1.RND_CHG_YN2                         AS RND_CHG_YN2       /* 라운딩변경(일오전)여부 */
	         , DATE_FORMAT(T1.REG_DTM, "%Y%m%d")      AS REG_DTM           /* 등록일시               */
	         , T1.REG_ID                              AS REG_ID            /* 등록자ID               */
	         , DATE_FORMAT(T1.UPD_DTM, "%Y%m%d")      AS UPD_DTM           /* 수정일시               */
	         , ( SELECT TT1.CODE
	               FROM BC_COMM_L TT1
	                  , TB_PROD_INFO TT2
	              WHERE 1 = 1
	                AND TT2.BAS_YY     = T1.BAS_YY
	                AND TT2.PROD_SEQ   = T1.PROD_SEQ
	                AND TT1.CODE       = TT2.HDNG_GBN
	                AND HEAD_CD = '500000'
	           )                                      AS PROD_CD           /* 상품코드               */
	         , ( SELECT TT1.CODE_NM
	               FROM BC_COMM_L TT1
	                  , TB_PROD_INFO TT2
	              WHERE 1 = 1
	                AND TT2.BAS_YY     = T1.BAS_YY
	                AND TT2.PROD_SEQ   = T1.PROD_SEQ
	                AND TT1.CODE       = TT2.HDNG_GBN
	                AND HEAD_CD = '500000'
	           )                                      AS PROD_NM           /* 상품명                 */
	         , T1.UPD_ID                              AS UPD_ID            /* 수정자ID               */
	         , T2.PROD_SEQ                            AS PCK_PROD_SEQ      /* 상품구분               */
	         , T2.PER_NUM                             AS PER_NUM           /* 인원수                 */
	         , NVL(T2.CAR_NUM,0)                      AS CAR_NUM           /* 차량대수               */
	         , NVL(T2.USE_AMT,0)                      AS USE_AMT           /* 이용금액               */
	        <!--
	         , T3.DEP_IN_DT                           AS DEP_IN_DT         /* 예약금입금일자         */
	         , NVL(T3.DEP_AMT,0)                      AS DEP_AMT           /* 예약금액               */
	         , NVL(T3.BAL_AMT,0)                      AS BAL_AMT           /* 잔금                   */
	         , NVL(T3.DCT_AMT,0)                      AS DCT_AMT           /* 할인금액               */
	         , NVL(T3.PAY_AMT,0)                      AS PAY_AMT           /* 입금금액               */
	         , NVL(T3.TOT_AMT,0)                      AS TOT_AMT           /* 총액                   */
	        -->
	         , T4.EMAIL                               AS EMAIL             /* USR EMAIL              */
	      FROM TB_REQ_BOOKING_M T1 
	 LEFT JOIN TB_REQ_PICKUP T2
	        <!--  , TB_REQ_FEE T3  -->
	        ON T2.REQ_DT  = T1.REQ_DT
	       AND T2.REQ_SEQ = T1.SEQ
	       <!--
	       AND T3.REQ_DT  = T1.REQ_DT
	       AND T3.REQ_SEQ = T1.SEQ
	       -->
	 LEFT JOIN TB_MEMBER T4
            ON T4.USER_ID = T1.USER_ID
	       ) T3
	 WHERE 1 = 1
	   AND T3.SEQ    = #{SEQ}
	   AND T3.REQ_DT = #{REQ_DT}
	 ORDER BY T3.ROWNUM
	</select>
	
	<select id="invoiceSelectList" parameterType="BMap" resultType="BMap">
        <include refid="page.pagingPre"/> <!-- 페이징 처리 시작 -->	
            SELECT ROW_NUMBER() OVER(ORDER BY T1.SEQ DESC) AS ROWNUM
                , T1.REQ_DT     /*  예약일자     */
                , T1.SEQ        /*  일련번호     */
                , T1.ITEM_CD    /*  항목코드     */
                , T1.ITEM_NM    /*  항목명       */
                , T1.AMT_SIGN   /*  통화기호     */
                , T1.PER_AMT    /*  금액         */
                , T1.USE_DAY    /*  이용횟수     */
                , T1.UNIT_DAY   /*  횟수단위     */
                , T1.USE_NUM    /*  이용수량     */
                , T1.UNIT_NUM   /*  수량단위     */
                , CASE WHEN T1.UNIT_NUM = 'P' THEN '인' WHEN T1.UNIT_NUM = 'R'THEN '개' ELSE NULL END AS STR_UNIT_NUM  /* 일일 횟수 또는 일 */
                , CASE WHEN T1.UNIT_DAY = 'D' THEN '일' WHEN T1.UNIT_NUM = 'C'THEN '회' ELSE NULL END AS STR_UNIT_DAY  /* 일일 횟수 또는 일 */
                , T1.TOT_AMT    /*  총금액       */
                , T1.ORDER      /*  표시순서     */
                , T1.REF1       /*  참조1        */
                , T1.REF2       /*  참조2        */
                , DATE_FORMAT(T1.REG_DTM, "%Y%m%d") AS REG_DTM /* 등록일시 */
                , T1.REG_ID     /*  등록자ID     */
                , DATE_FORMAT(T1.UPD_DTM, "%Y%m%d") AS UPD_DTM /* 수정일시 */
                , T1.UPD_ID     /*  수정자ID     */
             FROM TB_REQ_INVOICE T1
            WHERE 1 = 1
              AND T1.REQ_DT = #{REQ_DT}
              AND T1.SEQ    = #{SEQ}
            ORDER BY T1.ORDER
        <include refid="page.pagingPost"/> <!-- 페이징 처리 끝 -->
	</select>
	
	<select id="InvoiceSelectBoxList" parameterType="BMap" resultType="CodeVO">
	    SELECT T3.CODE AS VALUE
	         , T3.CODE AS CODE	
	      FROM TB_REQ_INVOICE T1
             , TB_REQ_BOOKING_M T2
		     , BC_COMM_L T3
	     WHERE 1 = 1 
	       AND HEAD_CD = #{HEAD_CD}
	       AND T3.REF_CHR1 = T2.MEM_GBN
           AND T3.CODE     = T1.ITEM_CD
         ORDER BY T3.CODE
	</select>
	
	<select id="selectInvoiceListCnt" parameterType="BMap" resultType="int">
		SELECT COUNT(1) AS CNT
		  FROM TB_REQ_INVOICE T1
		 WHERE 1 = 1
		   AND REQ_DT = #{REQ_DT}
		   AND SEQ    = #{SEQ}
	</select>
	
	<insert id="insertInvoiceDetailInfo" parameterType="BMap">
        INSERT INTO TB_REQ_INVOICE
                    ( REQ_DT
                    , SEQ
                    , ITEM_CD
                    , ITEM_NM
                    , AMT_SIGN
                    , PER_AMT
                    , USE_DAY
                    , UNIT_DAY
                    , USE_NUM
                    , UNIT_NUM
                    , TOT_AMT
                    , TB_REQ_INVOICE.ORDER
                    , REF1
                    , REF2
                    , REG_DTM
                    , REG_ID
                    , UPD_DTM
                    , UPD_ID
                    )
             VALUES ( #{REQ_DT  }
                    , #{SEQ     }
                    , #{ITEM_CD }
                    , #{ITEM_NM }
                    , #{AMT_SIGN}
                    , #{PER_AMT }
                    , #{USE_DAY }
                    , #{UNIT_DAY}
                    , #{USE_NUM }
                    , #{UNIT_NUM}
                    , #{TOT_AMT }
                    , #{ORDER   }
                    , NULL
                    , NULL
                    , NOW()
                    , #{LOGIN_USER}
                    , NOW()
                    , #{LOGIN_USER}
                    )
	</insert>
	
	<insert id="addInvoiceDetailHis" parameterType="BMap">
        INSERT INTO TB_REQ_INVOICE_HIS
                    ( REQ_DT
                    , SEQ
                    , HIS_SEQ
                    , UPD_GBN
                    , ITEM_CD
                    , ITEM_NM
                    , AMT_SIGN
                    , PER_AMT
                    , USE_DAY
                    , UNIT_DAY
                    , USE_NUM
                    , UNIT_NUM
                    , TOT_AMT
                    , TB_REQ_INVOICE_HIS.ORDER
                    , REF1
                    , REF2
                    , REG_DTM
                    , REG_ID
                    , UPD_DTM
                    , UPD_ID
                    )
             VALUES ( #{REQ_DT  }
                    , #{SEQ     }
                    , (SELECT NVL(MAX(HIS_SEQ),0) AS SEQ FROM TB_REQ_INVOICE_HIS T1 WHERE REQ_DT = #{REQ_DT} AND SEQ = #{SEQ}) + 1
                    , #{STATUS_V}
                    , #{ITEM_CD }
                    , #{ITEM_NM }
                    , #{AMT_SIGN}
                    , #{PER_AMT }
                    , #{USE_DAY }
                    , #{UNIT_DAY}
                    , #{USE_NUM }
                    , #{UNIT_NUM}
                    , #{TOT_AMT }
                    , #{ORDER   }
                    , NULL
                    , NULL
                    , NOW()
                    , #{LOGIN_USER}
                    , NOW()
                    , #{LOGIN_USER}
                    )
	</insert>
	
	<insert id="delInvoiceDetailHis" parameterType="BMap">
        INSERT INTO TB_REQ_INVOICE_HIS
                    ( REQ_DT
                    , SEQ
                    , HIS_SEQ
                    , UPD_GBN
                    , ITEM_CD
                    , ITEM_NM
                    , AMT_SIGN
                    , PER_AMT
                    , USE_DAY
                    , UNIT_DAY
                    , USE_NUM
                    , UNIT_NUM
                    , TOT_AMT
                    , TB_REQ_INVOICE_HIS.ORDER
                    , REF1
                    , REF2
                    , REG_DTM
                    , REG_ID
                    , UPD_DTM
                    , UPD_ID
                    )
               SELECT T1.REQ_DT
                    , T1.SEQ
                    , (SELECT NVL(MAX(HIS_SEQ),0) AS SEQ FROM TB_REQ_INVOICE_HIS T2) + 1
                    , #{STATUS_V}
                    , T1.ITEM_CD
                    , T1.ITEM_NM
                    , T1.AMT_SIGN
                    , T1.PER_AMT
                    , T1.USE_DAY
                    , T1.UNIT_DAY
                    , T1.USE_NUM
                    , T1.UNIT_NUM
                    , T1.TOT_AMT
                    , T1.ORDER
                    , NULL
                    , NULL
                    , NOW()
                    , #{LOGIN_USER}
                    , NOW()
                    , #{LOGIN_USER}
                 FROM TB_REQ_INVOICE T1
                WHERE 1 = 1
                  AND REQ_DT  = #{REQ_DT}
                  AND SEQ     = #{SEQ}
                  AND ITEM_CD = #{ITEM_CD}
	</insert>
	
	<update id="updateInvoiceDetailInfo" parameterType="BMap">
		UPDATE TB_REQ_INVOICE
           SET REQ_DT   = #{REQ_DT  }
             , SEQ      = #{SEQ     }
             , ITEM_CD  = #{ITEM_CD }
             , ITEM_NM  = #{ITEM_NM }
             , AMT_SIGN = #{AMT_SIGN}
             , PER_AMT  = #{PER_AMT }
             , USE_DAY  = #{USE_DAY }
             , UNIT_DAY = #{UNIT_DAY}
             , USE_NUM  = #{USE_NUM }
             , UNIT_NUM = #{UNIT_NUM}
             , TOT_AMT  = #{TOT_AMT }
             , TB_REQ_INVOICE.ORDER  = #{ORDER   }
             , UPD_DTM  = NOW()
             , UPD_ID   = #{LOGIN_USER}
         WHERE REQ_DT  = #{REQ_DT}
           AND SEQ     = #{SEQ}
           AND ITEM_CD = #{ITEM_CD}
	</update>
	
	<select id="firstInvoiceSelectList" parameterType="BMap" resultType="BMap">
        <![CDATA[
        INSERT INTO TB_REQ_INVOICE
        SELECT X.REQ_DT
               ,X.SEQ
               ,X.ITEM_CD
               ,X.ITEM_NM
               ,X.AMT_SIGN
               ,X.PER_AMT
               ,X.USE_DAY
               ,X.UNIT_DAY
               ,X.USE_NUM
               ,X.UNIT_NUM
               ,(X.PER_AMT * USE_DAY * USE_NUM) AS TOT_AMT
               ,X.SORT  
               ,'' AS REF1
               ,'' AS REF2
               ,NOW() AS REG_DTM
               ,#{LOGIN_USER}  AS REG_ID   
               ,NOW() AS UPD_DTM
               ,#{LOGIN_USER}  AS UPD_DTM  
        FROM (
        SELECT  B.REQ_DT        AS REQ_DT
		        , B.SEQ         AS SEQ
		        , A.CODE        AS ITEM_CD
		        , A.CODE_NM     AS ITEM_NM
		        , A.REF_CHR2    AS AMT_SIGN 
		        , B.TOT_PERSON  AS TOT_PERSON 
		        , B.R_PERSON    AS R_PERSON
		        , B.N_PERSON    AS N_PERSON
		        , B.K_PERSON    AS K_PERSON
		        , CASE WHEN A.REF_CHR3 = 'D' THEN CAST(B.CHK_OUT_DT AS DATE) - CAST(B.CHK_IN_DT AS DATE) 
		             ELSE 1 END AS USE_DAY
		        , A.REF_CHR3    AS UNIT_DAY
		        , CASE  WHEN A.CODE = CONCAT('PROD',B.MEM_GBN)           THEN B.R_PERSON
		                WHEN A.CODE = CONCAT('ROOMN',B.MEM_GBN)          THEN B.N_PERSON
		                WHEN A.CODE = CONCAT('ROOMK',B.MEM_GBN)          THEN B.K_PERSON
		                WHEN A.CODE = CONCAT('ROOMUP',B.MEM_GBN)         THEN B.ADD_R_P_CNT
		                WHEN A.CODE = CONCAT('ROOMADD',B.MEM_GBN)        THEN B.ADD_R_S_CNT
		                WHEN A.REF_CHR4 = 'P'                            THEN B.TOT_PERSON
		                WHEN A.REF_CHR4 = 'R'  AND B.ROOM_TYPE IN ('01', '02')     THEN B.CNT_D1 + B.CNT_D2
		                WHEN A.REF_CHR4 = 'R'  AND B.ROOM_TYPE IN ('03', '04')     THEN B.CNT_P1 + B.CNT_P2
		           END USE_NUM
		        , A.REF_CHR4    AS UNIT_NUM
		        , A.REF_CHR5    AS SORT
		        , CASE  WHEN A.CODE = CONCAT('PROD',B.MEM_GBN)              AND B.PROD_SEQ = C.PROD_SEQ THEN C.COM_AMT 
		                WHEN A.CODE = CONCAT('ROOMN',B.MEM_GBN)             AND B.N_PERSON > 0          AND C.HDNG_GBN = '29' AND C.PROD_COND = 'N' THEN C.COM_AMT
		                WHEN A.CODE = CONCAT('ROOMK',B.MEM_GBN)             AND B.K_PERSON > 0          AND C.HDNG_GBN = '29' AND C.PROD_COND = 'K' THEN C.COM_AMT 
		                WHEN A.CODE = CONCAT('LATECHECKOUT',B.MEM_GBN)      AND B.LATE_CHECK_OUT = '1'  AND C.HDNG_GBN = '16' THEN C.COM_AMT 
		                WHEN A.CODE = CONCAT('LATECHECKOUT',B.MEM_GBN)      AND B.LATE_CHECK_OUT = '2'  AND C.HDNG_GBN = '17' THEN C.COM_AMT 
		                WHEN A.CODE = CONCAT('ROOMUP',B.MEM_GBN)            AND B.ADD_R_P_DAY <> 0      AND C.HDNG_GBN = '15' THEN C.COM_AMT 
		                WHEN A.CODE = CONCAT('SURCHARGE',B.MEM_GBN) AND (SELECT COUNT(*) CNT FROM BC_COMM_L X WHERE HEAD_CD = '500160' AND CODE IN (B.FLIGHT_IN ,  B.FLIGHT_OUT) > 0 )
		                    AND  B.TOT_PERSON < 4 AND C.PROD_COND = 'PD4' AND HDNG_GBN = '21' THEN C.COM_AMT 
		                WHEN A.CODE = CONCAT('SURCHARGE',B.MEM_GBN)  AND (SELECT COUNT(*) CNT FROM BC_COMM_L X WHERE HEAD_CD = '500160' AND CODE IN (B.FLIGHT_IN ,  B.FLIGHT_OUT) > 0 )
		                    AND  B.TOT_PERSON >= 4 AND C.PROD_COND =  'PU4' AND HDNG_GBN = '21' THEN C.COM_AMT
		          WHEN A.CODE = CONCAT('SENDING',B.MEM_GBN)  AND   EXISTS (SELECT * FROM  TB_REQ_PICKUP WHERE REQ_DT = B.REQ_DT AND REQ_SEQ = B.SEQ AND PROD_SEQ = C.PROD_SEQ) THEN  (SELECT SUM(USE_AMT) FROM  TB_REQ_PICKUP WHERE REQ_DT = B.REQ_DT AND REQ_SEQ = B.SEQ AND PROD_SEQ = C.PROD_SEQ) 
		         ELSE 0 END PER_AMT
		      FROM  bc_comm_l A
		        INNER JOIN TB_REQ_BOOKING_M B
		            ON A.HEAD_CD      = '500140'   -- 인보이스 항목
		            AND INSTR(A.REF_CHR1,B.MEM_GBN) > 0  -- 항목구분   
		        INNER JOIN TB_PROD_INFO C
		            ON B.BAS_YY   = C.BAS_YY
		            AND B.BAS_YY_SEQ = C.BAS_YY_SEQ
		 WHERE B.REQ_DT     = #{REQ_DT}
		 AND B.SEQ          = #{SEQ}      -- INPUT 
         ) X
         WHERE PER_AMT <> 0
         ORDER BY SORT ASC      
          ]]>  
	</select>
	
	<delete id="deleteInvoiceDetailInfo" parameterType="BMap">
	    DELETE
	      FROM TB_REQ_INVOICE
	     WHERE 1 = 1
	       AND REQ_DT  = #{REQ_DT}
	       AND SEQ     = #{SEQ}
	       AND ITEM_CD = #{ITEM_CD}
	</delete>
	
	<select id="selectPrdInfo" parameterType="BMap" resultType="BMap" >
	    SELECT A.COM_AMT
	         , A.PROD_SEQ
	         , A.COM_CNTN
	         , A.PROD_COND
	         , A.HDNG_GBN
	         , A.PROD_SEQ AS HD_PROD_SEQ
		  FROM TB_PROD_INFO A
		     , (SELECT REF_CHR1 AS HDNG_GBN
		          FROM BC_COMM_L
				 WHERE 1 = 1
		           AND HEAD_CD = #{HEAD_CD}   
		           AND REF_CHR1 IS NOT NULL
		           AND REF_CHR1 != ''
			    ) B
		  WHERE 1 = 1 
		  
		    AND A.BAS_YY     = #{BAS_YY}
		    AND A.SSN_GBN    = #{SSN_GBN}
		    AND A.BAS_YY_SEQ = #{BAS_YY_SEQ}
		    AND A.HDNG_GBN   = B.HDNG_GBN
			    
	</select>
	
	<select id="selectPickListCnt" parameterType="BMap" resultType="int">
		SELECT COUNT(1) AS CNT
		  FROM TB_REQ_PICKUP T1
		 WHERE 1 = 1
		   AND REQ_DT   = #{REQ_DT}
		   AND REQ_SEQ  = #{REQ_SEQ}
		   AND PROD_SEQ = #{HD_PROD_SEQ}
	</select>
	
	<insert id="insertPickupInfo" parameterType="BMap">
        INSERT INTO TB_REQ_PICKUP
                    ( REQ_SEQ
                    , REQ_DT
                    , PROD_SEQ
                    , PER_NUM
                    , CAR_NUM
                    , USE_AMT
                    , ADD_AMT
                    , REG_DTM
                    , REG_ID
                    , UPD_DTM
                    , UPD_ID
                    )
             VALUES ( #{REQ_SEQ }
                    , #{REQ_DT  }
                    , #{PROD_SEQ}
                    , #{PER_NUM }
                    , #{CAR_NUM }
                    , #{USE_AMT }
                    , #{ADD_AMT }
                    , NOW()
                    , #{LOGIN_USER}
                    , NOW()
                    , #{LOGIN_USER}
                    )
	</insert>
	
	<update id="updatePickupInfo" parameterType="BMap">
	    UPDATE TB_REQ_PICKUP
           SET PROD_SEQ = #{PROD_SEQ}
             , PER_NUM  = #{PER_NUM}
             , CAR_NUM  = #{CAR_NUM}
             , USE_AMT  = #{USE_AMT}
             , ADD_AMT  = #{ADD_AMT}
             , UPD_DTM  = NOW()
             , UPD_ID   = #{LOGIN_USER}
         WHERE REQ_DT   = #{REQ_DT}
           AND REQ_SEQ  = #{REQ_SEQ}
           AND PROD_SEQ = #{HD_PROD_SEQ}
	</update>
	
	<update id="updatePickGbn" parameterType="BMap">
	    UPDATE TB_REQ_BOOKING_M
           SET PICK_GBN = #{PICK_GBN}
             , UPD_DTM  = NOW()
             , UPD_ID   = #{LOGIN_USER}
         WHERE REQ_DT   = #{REQ_DT}
           AND SEQ      = #{REQ_SEQ}
	</update>
	
	<delete id="deletePickupInfo" parameterType="BMap">
	    DELETE
	      FROM TB_REQ_PICKUP
	     WHERE 1 = 1
	       AND REQ_DT   = #{REQ_DT}
           AND REQ_SEQ  = #{REQ_SEQ}
           AND PROD_SEQ = #{HD_PROD_SEQ}
	</delete>
	
	<update id="updateReserveStatus" parameterType="BMap">
	    UPDATE TB_REQ_BOOKING_M
           SET PRC_STS = #{CHG_PRC_STS}
             , UPD_DTM  = NOW()
             , UPD_ID   = #{LOGIN_USER}
         WHERE REQ_DT   = #{REQ_DT}
           AND SEQ      = #{SEQ}
	</update>
	
	<select id="reserveReportInfoList" parameterType="BMap" resultType="BMap">
    	<include refid="page.pagingPre"/> <!-- 페이징 처리 시작 -->	
			SELECT 
				ROW_NUMBER() OVER(ORDER BY T1.REQ_DT ASC, T1.SEQ ASC) AS ROWNUM
				,T1.REQ_DT
				,T1.SEQ
				,T1.USER_ID
				,T1.MEM_GBN
				,(
					SELECT CODE_NM
					FROM BC_COMM_L
					WHERE 1=1
					AND HEAD_CD = '500030'
					AND CODE = T1.MEM_GBN
				) AS MEM_NM /* 회원 구분 */
				,T1.CONFIRM_NO /* 리조트 CF 번호 */
				,T1.REQ_HAN_NM /* 예약자 한글 */
				,T1.REQ_ENG_NM /* 예약자 영문 */
				,T1.INV_REG_DT /* 인보이스 발행일자 */
				,T2.DEP_IN_DT /* 예약금 입금 일자 */
				,T2.DEP_AMT /* 예약금 금액 */
				,T2.BAL_AMT /* 잔금 금액 */
				,T1.PICK_IN /* 픽업 차량 도착 */
				,T1.PICK_OUT /* 픽업 차량 출발 */
				,T1.FLIGHT_IN /* 항공편 도착 */
				,T1.FLIGHT_OUT /* 항공편 출발 */
				,T1.TOT_PERSON /* 예약 인원 */
				,T1.CNT_D1 /* 숙박 트윈 */
				,T1.CNT_D2 /* 숙박 더블 */
				,T1.CNT_P1 /* 숙박 프리미엄트윈 */
				,T1.CNT_P2 /* 숙박 프리미엄킹 */
				,T1.BAS_YY
				,T1.PROD_SEQ
				,T3.HDNG_GBN /* 상품 항목 구분 */
				,(
					SELECT REF_NUM1
					FROM BC_COMM_L
					WHERE 1=1
					AND HEAD_CD = '500030'
					AND CODE = T3.HDNG_GBN
				) AS ROUNDING_WEEK /* 라운딩 평일 */
				,(
					SELECT REF_NUM2
					FROM BC_COMM_L
					WHERE 1=1
					AND HEAD_CD = '500030'
					AND CODE = T3.HDNG_GBN
				) AS ROUNDING_SAT /* 라운딩 토 */
				,(
					SELECT REF_NUM3
					FROM BC_COMM_L
					WHERE 1=1
					AND HEAD_CD = '500030'
					AND CODE = T3.HDNG_GBN
				) AS ROUNDING_SUN /* 라운딩 일 */
				,T1.RND_CHG_YN1 /* 라운딩변경(토오전)여부 */
				,T1.RND_CHG_YN2 /* 라운딩변경(일오전)여부 */
				,T1.REMARK /* 비고(추가요구사항) */
			FROM TB_REQ_BOOKING_M T1
			LEFT JOIN tb_req_fee T2
			ON T1.REQ_DT = T2.REQ_DT AND T1.SEQ = T2.REQ_SEQ
			LEFT JOIN tb_prod_info T3
			ON T1.BAS_YY = T3.BAS_YY AND T1.PROD_SEQ = T3.PROD_SEQ
			WHERE DATE_FORMAT(T1.REQ_DT,'%Y%m') = #{SEARCH_DT}
    	<include refid="page.pagingPost"/> <!-- 페이징 처리 끝 -->
	</select>
</mapper>